{"version":3,"sources":["components/Navbar.tsx","components/TodoForm.tsx","components/TodoList.tsx","components/pages/TodosPage.tsx","components/pages/AboutPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","to","id","TodoForm","props","useState","title","setTitle","onChange","event","target","value","type","onKeyPress","key","onAdd","placeholder","htmlFor","TodoList","todos","onRemove","onToggle","length","map","todo","classes","completed","push","join","checked","bind","onClick","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","filter","c","AboutPage","history","useHistory","App","basename","process","component","path","exact","ReactDOM","render","document","getElementById"],"mappings":"+OAiBeA,EAdW,WACtB,OACI,6BACE,yBAAKC,UAAU,mCACb,kBAAC,IAAD,CAASC,GAAG,IAAID,UAAU,cAA1B,sBACA,wBAAIE,GAAG,aAAaF,UAAU,8BAC5B,4BAAI,kBAAC,IAAD,CAASC,GAAG,KAAZ,4DACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,qE,sBCsBHE,EA1B4B,SAACC,GAAW,IAAD,EACxBC,mBAAS,IADe,mBAC3CC,EAD2C,KACpCC,EADoC,KAYlD,OACI,yBAAKP,UAAU,mBACX,2BACAQ,SAZc,SAACC,GACnBF,EAASE,EAAMC,OAAOC,QAYlBA,MAAOL,EACPM,KAAK,OACLV,GAAG,QACHW,WAbgB,SAACJ,GACH,UAAdA,EAAMK,MACNV,EAAMW,MAAMT,GACZC,EAAS,MAWTS,YAAY,yHACZ,2BAAOC,QAAQ,QAAQjB,UAAU,UAAjC,0HClBCkB,EAAoC,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAMC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,SAC/D,OAAoB,IAAjBF,EAAMG,OACE,uBAAGtB,UAAU,UAAb,mEAGP,4BACKmB,EAAMI,KAAI,SAACC,GACZ,IAAMC,EAAU,CAAC,QAIjB,OAHGD,EAAKE,WACJD,EAAQE,KAAK,aAGb,wBAAI3B,UAAWyB,EAAQG,KAAK,KAAMd,IAAKU,EAAKtB,IAC5C,+BACI,2BAAOU,KAAK,WACZiB,QAASL,EAAKE,UACdlB,SAAUa,EAASS,KAAK,KAAMN,EAAKtB,MAEnC,8BAAOsB,EAAKlB,OACZ,uBAAGN,UAAU,0BAA0B+B,QAAS,WAAMX,EAASI,EAAKtB,MAApE,iBCvBP8B,EAAuB,WAAO,IAAD,EACT3B,mBAAkB,IADT,mBAC3Bc,EAD2B,KACrBc,EADqB,KAGlCC,qBAAU,WACR,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MACzDN,EAASE,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAAQJ,KAAKK,UAAUtB,MAC3C,CAACA,IAsBR,OACI,oCACJ,kBAAC,EAAD,CACEJ,MAvBqB,SAACT,GAClB,IAAMoC,EAAU,CACdpC,QACAJ,GAAIyC,KAAKC,MACTlB,WAAW,GAEbO,GAAS,SAACY,GAAD,OAAUH,GAAV,mBAAqBG,UAmBpC,kBAAC,EAAD,CACE1B,MAAOA,EACPE,SAnBwB,SAACnB,GACrB+B,GAAS,SAACY,GAAD,OAASA,EAAKtB,KAAI,SAAAC,GAIzB,OAHGA,EAAKtB,KAAOA,IACbsB,EAAKE,WAAYF,EAAKE,WAEjBF,SAebJ,SAZwB,SAAClB,GACrB+B,GAAS,SAACY,GAAD,OAASA,EAAKC,QAAO,SAAAC,GAAC,OAAIA,EAAE7C,KAAOA,aC/BzC8C,EAAuB,WAChC,IAAMC,EAAUC,cAChB,OACI,oCACA,6IACA,mHACA,4BAAQlD,UAAU,MAAM+B,QAAS,kBAAKkB,EAAQtB,KAAK,OAAnD,+GCWOwB,EAdO,WACpB,OAAO,oCACP,kBAAC,IAAD,CAAYC,SAAUC,0BACtB,kBAAC,EAAD,MACC,yBAAKrD,UAAU,aAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsD,UAAWtB,EAAWuB,KAAK,IAAIC,OAAK,IAC3C,kBAAC,IAAD,CAAOF,UAAWN,EAAWO,KAAK,gBCRtCE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e06d0743.chunk.js","sourcesContent":["import  React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n \r\nconst Navbar: React.SFC = () => {\r\n    return (  \r\n        <nav>\r\n          <div className=\"nav-wrapper purple darken-2 px1\">\r\n            <NavLink to=\"/\" className=\"brand-logo\">React + Typescript</NavLink>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n              <li><NavLink to=\"/\">Список дел</NavLink></li>\r\n              <li><NavLink to=\"/about\">Информация</NavLink></li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n            );\r\n}\r\n \r\nexport default Navbar;","import React, {useState} from 'react';\r\n\r\ninterface TodoFormProps {\r\n    onAdd(title: string): void\r\n}\r\n\r\nconst TodoForm: React.SFC<TodoFormProps> = (props) => {\r\n    const [title, setTitle] = useState('')\r\n\r\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(event.target.value)\r\n    }\r\n    const keyPressHandler = (event: React.KeyboardEvent) => {\r\n        if (event.key === 'Enter'){\r\n            props.onAdd(title)\r\n            setTitle('')\r\n        }\r\n    }\r\n    return ( \r\n        <div className=\"input-field mt2\">\r\n            <input\r\n            onChange={changeHandler} \r\n            value={title}\r\n            type=\"text\" \r\n            id=\"title\" \r\n            onKeyPress={keyPressHandler}\r\n            placeholder=\"Введите название дела\"/>\r\n            <label htmlFor=\"title\" className=\"active\">Введите название дела</label>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TodoForm;","import React from 'react';\r\nimport { ITodo } from './interfaces';\r\n\r\ntype TodoListProps ={\r\n    todos: ITodo[],\r\n    onToggle(id: number): void,\r\n    onRemove: (id:number) => void\r\n}\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ( {todos,onRemove,onToggle} ) => {\r\n    if(todos.length === 0) {\r\n        return <p className=\"center\">Пока дел нет!</p>\r\n    }\r\n    return(\r\n        <ul>\r\n            {todos.map((todo)=> {\r\n            const classes = ['todo']\r\n            if(todo.completed) {\r\n                classes.push('completed')\r\n            }\r\n            return (\r\n                <li className={classes.join(' ')} key={todo.id}>\r\n                <label>\r\n                    <input type=\"checkbox\" \r\n                    checked={todo.completed}\r\n                    onChange={onToggle.bind(null, todo.id)}\r\n                    />\r\n                    <span>{todo.title}</span>\r\n                    <i className=\"material-icons red-text\" onClick={()=>{ onRemove(todo.id)}}>delete</i>\r\n                </label>\r\n                </li>\r\n            )\r\n             })}\r\n        </ul>\r\n    )\r\n}","import React,{ useState, useEffect }  from 'react';\r\nimport TodoForm from '../TodoForm'\r\nimport { TodoList } from '../TodoList'; \r\nimport { ITodo } from '../interfaces';\r\n\r\nexport const TodosPage: React.SFC = () => {\r\n        const [todos,setTodos] = useState<ITodo[]>([])\r\n      \r\n        useEffect(()=> {\r\n          const saved =JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\r\n          setTodos(saved)\r\n        }, [])\r\n      \r\n        useEffect(()=> {\r\n          localStorage.setItem('todos',JSON.stringify(todos))}\r\n          ,[todos])\r\n\r\n        const addHandler = (title: string) => {\r\n          const newTodo = {\r\n            title,\r\n            id: Date.now(),\r\n            completed: false\r\n          }\r\n          setTodos((prev)=> [newTodo,...prev])\r\n        }\r\n        const toggleHandler = (id:number) => {\r\n          setTodos((prev)=> prev.map(todo => {\r\n            if(todo.id === id){\r\n              todo.completed =!todo.completed\r\n            }\r\n            return todo\r\n          }))\r\n        }\r\n        const removeHandler = (id:number) => {\r\n          setTodos((prev)=> prev.filter(c => c.id !== id))\r\n        }\r\n      \r\n    return ( \r\n        <>\r\n    <TodoForm \r\n      onAdd={addHandler}\r\n    />\r\n    <TodoList \r\n      todos={todos}\r\n      onToggle={toggleHandler}\r\n      onRemove={removeHandler}\r\n    />\r\n        </>\r\n    );\r\n}\r\n \r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom' \r\n\r\nexport const AboutPage: React.SFC = () => {\r\n    const history = useHistory()\r\n    return ( \r\n        <>\r\n        <h1>Страница информации</h1>\r\n        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Minima est veritatis nemo.</p>\r\n        <button className=\"btn\" onClick={()=> history.push('/')}>Обратно к списку дел</button>\r\n        </>\r\n     );\r\n}\r\n ","import React from 'react';\nimport Navbar from './components/Navbar'\nimport { HashRouter,Switch,Route } from 'react-router-dom'\nimport { TodosPage } from './components/pages/TodosPage';\nimport { AboutPage } from './components/pages/AboutPage';\n\nconst App: React.FC = () => {\n  return <>\n  <HashRouter basename={process.env.PUBLIC_URL}>\n  <Navbar />\n   <div className=\"container\">\n  <Switch>\n    <Route component={TodosPage} path=\"/\" exact/>\n    <Route component={AboutPage} path=\"/about\"/>\n  </Switch>\n   </div>\n  </HashRouter> \n  </>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}